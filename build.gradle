buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'com.google.cloud.tools:appengine-gradle-plugin:2.2.0'
	}
}


plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

apply plugin: 'com.google.cloud.tools.appengine'
appengine {  // App Engine tasks configuration
	deploy {   // deploy configuration
		projectId = 'GCLOUD_CONFIG' // gcloud config set project
		appengine.deploy.version = 'GCLOUD_CONFIG'
	}
}

group = 'com.match'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	baseName = 'app'
	version = '0.0.1'
	manifest {
		attributes(
				'Main-Class': 'com.match.matchapi.MatchapiApplication'
		)
	}

}

//task fatJar(type: Jar) {
//	manifest.from jar.manifest
////    classifier = 'all'
//	from {
//		configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
//	} {
//		exclude "META-INF/*.SF"
//		exclude "META-INF/*.DSA"
//		exclude "META-INF/*.RSA"
//	}
//	with jar
//}

//artifacts {
//	archives fatJar
//}

//task fatJar(type: Jar) {
//	manifest {
//		attributes 'Implementation-Title': 'Gradle Jar File Example',
//				'Implementation-Version': version,
//				'Main-Class': 'com.match.matchapi.MatchapiApplication'
//	}
//	baseName = project.name + '-all'
//	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//	with jar
//}

//task stage(type: Copy, dependsOn: [clean, build]) {
//	from jar.archivePath
//	into project.rootDir
//	rename {
//		'app.jar'
//	}
//}
////stage.mustRunAfter(clean)
////
////clean << {
////	project.file('app.jar').delete()
////}
//
//jar {
//	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
//	manifest {
//		attributes(
//				'Main-Class': 'com.match.matchapi.MatchapiApplication'
//		)
//	}
//}